apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment # Nombre del deployment
  namespace: convertidor-imagenes # Namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - worker
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: worker-container
        image: dmolmar/images-api:latest # Imagen del contenedor del worker
        imagePullPolicy: Always
        command: ["python", "worker.py"] # Comando de inicio del worker
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: secret-key # Clave secreta del secret app-secrets
        - name: REDIS_URL
          value: "redis://redis-service:6379" # URL de Redis
        resources:
          requests:
            cpu: "500m"  # Solicitud mínima de CPU
            memory: "512Mi" # Solicitud mínima de memoria
          limits:
            cpu: "750m"  # Límite máximo de CPU
            memory: "1Gi" # Límite máximo de memoria
        volumeMounts:
        - name: uploads
          mountPath: /data/uploads # Monta el volumen de uploads
        - name: temp-uploads
          mountPath: /data/temp-uploads  # Monta el volumen de temporales
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: uploads-pvc # PVC para archivos de subida
      - name: temp-uploads
        persistentVolumeClaim:
          claimName: temp-uploads-pvc  # PVC para archivos temporales